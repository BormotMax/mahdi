[{"/home/usr01/PROJECTS/mahdi_test/src/index.tsx":"1","/home/usr01/PROJECTS/mahdi_test/src/reportWebVitals.ts":"2","/home/usr01/PROJECTS/mahdi_test/src/App.tsx":"3","/home/usr01/PROJECTS/mahdi_test/src/AddNewTravelPolicy.tsx":"4","/home/usr01/PROJECTS/mahdi_test/src/FormButton.tsx":"5","/home/usr01/PROJECTS/mahdi_test/src/FormCheckBox.tsx":"6","/home/usr01/PROJECTS/mahdi_test/src/svg/icons.js":"7","/home/usr01/PROJECTS/mahdi_test/src/TravelPolicies.tsx":"8","/home/usr01/PROJECTS/mahdi_test/src/NoTravelPolicy.tsx":"9","/home/usr01/PROJECTS/mahdi_test/src/helpers.ts":"10","/home/usr01/PROJECTS/mahdi_test/src/api.ts":"11"},{"size":790,"mtime":1608294685895,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608040269846,"results":"14","hashOfConfig":"13"},{"size":1107,"mtime":1608306990578,"results":"15","hashOfConfig":"13"},{"size":3754,"mtime":1608307348661,"results":"16","hashOfConfig":"13"},{"size":323,"mtime":1608307339145,"results":"17","hashOfConfig":"13"},{"size":927,"mtime":1608276292629,"results":"18","hashOfConfig":"13"},{"size":15896,"mtime":1608217557843,"results":"19","hashOfConfig":"13"},{"size":1566,"mtime":1608306738777,"results":"20","hashOfConfig":"13"},{"size":479,"mtime":1608298641473,"results":"21","hashOfConfig":"13"},{"size":572,"mtime":1608306624571,"results":"22","hashOfConfig":"13"},{"size":62,"mtime":1608294864356,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"a95jna",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/usr01/PROJECTS/mahdi_test/src/index.tsx",[],["49","50"],"/home/usr01/PROJECTS/mahdi_test/src/reportWebVitals.ts",[],"/home/usr01/PROJECTS/mahdi_test/src/App.tsx",["51"],"/home/usr01/PROJECTS/mahdi_test/src/AddNewTravelPolicy.tsx",[],"/home/usr01/PROJECTS/mahdi_test/src/FormButton.tsx",[],"/home/usr01/PROJECTS/mahdi_test/src/FormCheckBox.tsx",[],"/home/usr01/PROJECTS/mahdi_test/src/svg/icons.js",[],["52","53"],"/home/usr01/PROJECTS/mahdi_test/src/TravelPolicies.tsx",["54"],"import React, { FC, useState } from 'react';\nimport { MutationFunction, useMutation, useQuery } from 'react-query';\nimport { AddNewTravelPolicy } from './AddNewTravelPolicy';\nimport { BASE_URL } from './api';\nimport { TravelPolicy } from './NoTravelPolicy';\nimport { updateTravelPolicies, UpdateTravelPoliciesVariables } from './helpers';\nimport { Policies } from './interfaces';\n\n\n\n// interface useQueryProps {\n//   onSuccess: (data: Policies[]) => void, \n// }\n\ninterface Props {\n  isAdding: boolean,\n  onClick(): void,\n}\n\nexport const TravelPolicies: FC<Props> = ({ isAdding, onClick }) => {\n  const [policies, setPolicies] = useState<Policies[]>([]);\n\n  const { data } = useQuery<Policies[]>('travelPolicies', async () => {\n    const result = await (await fetch(BASE_URL)).json();\n      return result;\n  }, {\n    onSuccess: (rules) => {\n      setPolicies(rules);\n    },\n    onError: (error) => {console.log(error)}\n  });\n\n  const { mutate } = useMutation(\n    updateTravelPolicies as MutationFunction<Policies, UpdateTravelPoliciesVariables>,\n    {\n      onSuccess: (newPolicy) => {\n        setPolicies((prevState) => [...prevState, newPolicy])\n        },\n    },\n    );\n\n  const handleClick = (data: Policies) => {\n\n    mutate({\n      url: BASE_URL,\n      data: data,\n    })\n  };\n\n  return (\n    <>\n      {policies?.length \n      ? policies.map(({ name, id }) => <TravelPolicy key={id} title={name} />) \n      : <TravelPolicy title=\"No Travel Policies\" />}\n      <AddNewTravelPolicy isOpened={isAdding} onClick={onClick} updateFn={handleClick}/>\n    </>\n    )\n};\n","/home/usr01/PROJECTS/mahdi_test/src/NoTravelPolicy.tsx",[],"/home/usr01/PROJECTS/mahdi_test/src/helpers.ts",[],"/home/usr01/PROJECTS/mahdi_test/src/api.ts",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":28},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"63","line":23,"column":11,"nodeType":"61","messageId":"62","endLine":23,"endColumn":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'ReactQueryDevtools' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]